import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Theory = () => {
  const [activeSection, setActiveSection] = useState('mass');

  const theoryData = {
    mass: {
      title: '–ú–∞—Å—Å–∞',
      icon: 'Weight',
      color: 'from-orange-500 to-red-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –º–∞—Å—Å—ã',
          items: [
            { unit: '1 —Ç–æ–Ω–Ω–∞ (—Ç)', equals: '1000 –∫–≥', example: '–ú–∞—Å—Å–∞ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è' },
            { unit: '1 —Ü–µ–Ω—Ç–Ω–µ—Ä (—Ü)', equals: '100 –∫–≥', example: '–ú–µ—à–æ–∫ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è' },
            { unit: '1 –∫–∏–ª–æ–≥—Ä–∞–º–º (–∫–≥)', equals: '1000 –≥', example: '–ü–∞–∫–µ—Ç —Å–∞—Ö–∞—Ä–∞' },
            { unit: '1 –≥—Ä–∞–º–º (–≥)', equals: '1000 –º–≥', example: '–°–∫—Ä–µ–ø–∫–∞' },
            { unit: '1 –º–∏–ª–ª–∏–≥—Ä–∞–º–º (–º–≥)', equals: '0.001 –≥', example: '–ö—Ä—É–ø–∏–Ω–∫–∞ —Å–æ–ª–∏' }
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–Ω–Ω—ã –≤ –∫–≥ ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–≥ –≤ –≥—Ä–∞–º–º—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≥—Ä–∞–º–º—ã –≤ –∫–≥ ‚Üí —Ä–∞–∑–¥–µ–ª–∏ –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–≥ –≤ —Ç–æ–Ω–Ω—ã ‚Üí —Ä–∞–∑–¥–µ–ª–∏ –Ω–∞ 1000'
          ],
          examples: [
            { problem: '3 —Ç 450 –∫–≥ = ? –∫–≥', solution: '3 √ó 1000 + 450 = 3450 –∫–≥' },
            { problem: '5600 –≥ = ? –∫–≥ ? –≥', solution: '5600 √∑ 1000 = 5 –∫–≥ 600 –≥' },
            { problem: '2 —Ç 50 –∫–≥ + 1 —Ç 980 –∫–≥', solution: '2050 –∫–≥ + 1980 –∫–≥ = 4030 –∫–≥ = 4 —Ç 30 –∫–≥' }
          ]
        },
        tips: [
          'üí° –í—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏ –∫ –æ–¥–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏',
          'üí° –ü—Ä–æ–≤–µ—Ä—è–π –æ—Ç–≤–µ—Ç: –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–æ–≥–∏—á–Ω—ã–º (—Å–ª–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –≤–µ—Å–∏—Ç—å 50 –≥)',
          'üí° –ü—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –º–∞—Å—Å —É–¥–æ–±–Ω–æ –≤—Å—ë –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ –≥—Ä–∞–º–º—ã –∏–ª–∏ –∫–∏–ª–æ–≥—Ä–∞–º–º—ã'
        ]
      }
    },
    length: {
      title: '–î–ª–∏–Ω–∞ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ',
      icon: 'Ruler',
      color: 'from-blue-500 to-cyan-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –¥–ª–∏–Ω—ã',
          items: [
            { unit: '1 –∫–∏–ª–æ–º–µ—Ç—Ä (–∫–º)', equals: '1000 –º', example: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ä–∞–π–æ–Ω–∞–º–∏ –≥–æ—Ä–æ–¥–∞' },
            { unit: '1 –º–µ—Ç—Ä (–º)', equals: '10 –¥–º = 100 —Å–º', example: '–í—ã—Å–æ—Ç–∞ —Å—Ç–æ–ª–∞' },
            { unit: '1 –¥–µ—Ü–∏–º–µ—Ç—Ä (–¥–º)', equals: '10 —Å–º', example: '–î–ª–∏–Ω–∞ –∫–∞—Ä–∞–Ω–¥–∞—à–∞' },
            { unit: '1 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä (—Å–º)', equals: '10 –º–º', example: '–®–∏—Ä–∏–Ω–∞ –ø–∞–ª—å—Ü–∞' },
            { unit: '1 –º–∏–ª–ª–∏–º–µ—Ç—Ä (–º–º)', equals: '0.1 —Å–º', example: '–¢–æ–ª—â–∏–Ω–∞ –º–æ–Ω–µ—Ç—ã' }
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–º –≤ –º–µ—Ç—Ä—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–µ—Ç—Ä—ã –≤ —Å–º ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 100',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–º –≤ –º–º ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 10',
            '–î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ ‚Üí –¥–µ–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ'
          ],
          examples: [
            { problem: '2 –∫–º 350 –º = ? –º', solution: '2 √ó 1000 + 350 = 2350 –º' },
            { problem: '4 –º 25 —Å–º = ? —Å–º', solution: '4 √ó 100 + 25 = 425 —Å–º' },
            { problem: '15 –¥–º 8 —Å–º = ? —Å–º', solution: '15 √ó 10 + 8 = 158 —Å–º' }
          ]
        },
        perimeter: {
          title: '–ü–µ—Ä–∏–º–µ—Ç—Ä',
          formulas: [
            '–ü–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞: P = 2 √ó (a + b), –≥–¥–µ a –∏ b ‚Äî —Å—Ç–æ—Ä–æ–Ω—ã',
            '–ü–µ—Ä–∏–º–µ—Ç—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞: P = 4 √ó a, –≥–¥–µ a ‚Äî —Å—Ç–æ—Ä–æ–Ω–∞',
            '–ü–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞: P = a + b + c, –≥–¥–µ a, b, c ‚Äî —Å—Ç–æ—Ä–æ–Ω—ã'
          ],
          examples: [
            { problem: '–ù–∞–π–¥–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ 12 —Å–º –∏ 8 —Å–º', solution: 'P = 2 √ó (12 + 8) = 2 √ó 20 = 40 —Å–º' }
          ]
        },
        tips: [
          'üí° –ü–µ—Ä–∏–º–µ—Ç—Ä ‚Äî —ç—Ç–æ —Å—É–º–º–∞ –¥–ª–∏–Ω –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω —Ñ–∏–≥—É—Ä—ã',
          'üí° –ó–∞–ø–æ–º–Ω–∏: 1 –∫–º = 1000 –º, 1 –º = 100 —Å–º, 1 —Å–º = 10 –º–º',
          'üí° –ü—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–ª–∏–Ω–∞ –ø—É—Ç–∏ = —Å–∫–æ—Ä–æ—Å—Ç—å √ó –≤—Ä–µ–º—è'
        ]
      }
    },
    time: {
      title: '–í—Ä–µ–º—è',
      icon: 'Clock',
      color: 'from-green-500 to-emerald-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –≤—Ä–µ–º–µ–Ω–∏',
          items: [
            { unit: '1 –≤–µ–∫', equals: '100 –ª–µ—Ç', example: 'XX –≤–µ–∫ ‚Äî —Å 1901 –ø–æ 2000 –≥–æ–¥' },
            { unit: '1 –≥–æ–¥', equals: '12 –º–µ—Å—è—Ü–µ–≤ = 365 –¥–Ω–µ–π', example: '–í—Ä–µ–º—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–æ—Ä–æ—Ç–∞ –ó–µ–º–ª–∏ –≤–æ–∫—Ä—É–≥ –°–æ–ª–Ω—Ü–∞' },
            { unit: '1 –º–µ—Å—è—Ü', equals: '28-31 –¥–µ–Ω—å', example: '–Ø–Ω–≤–∞—Ä—å, —Ñ–µ–≤—Ä–∞–ª—å, –º–∞—Ä—Ç...' },
            { unit: '1 –Ω–µ–¥–µ–ª—è', equals: '7 –¥–Ω–µ–π', example: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ' },
            { unit: '1 —Å—É—Ç–∫–∏', equals: '24 —á–∞—Å–∞', example: '–î–µ–Ω—å –∏ –Ω–æ—á—å' },
            { unit: '1 —á–∞—Å (—á)', equals: '60 –º–∏–Ω—É—Ç', example: '–£—Ä–æ–∫ –≤ —à–∫–æ–ª–µ' },
            { unit: '1 –º–∏–Ω—É—Ç–∞ (–º–∏–Ω)', equals: '60 —Å–µ–∫—É–Ω–¥', example: '–í—Ä–µ–º—è –¥–ª—è —á–∏—Å—Ç–∫–∏ –∑—É–±–æ–≤' },
            { unit: '1 —Å–µ–∫—É–Ω–¥–∞ (—Å)', equals: '–±–∞–∑–æ–≤–∞—è –µ–¥–∏–Ω–∏—Ü–∞', example: '–û–¥–∏–Ω —É–¥–∞—Ä —Å–µ—Ä–¥—Ü–∞' }
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —á–∞—Å—ã –≤ –º–∏–Ω—É—Ç—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 60',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 60',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—É—Ç–∫–∏ –≤ —á–∞—Å—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 24',
            '–î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ ‚Üí –¥–µ–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ'
          ],
          examples: [
            { problem: '2 —á 35 –º–∏–Ω = ? –º–∏–Ω', solution: '2 √ó 60 + 35 = 155 –º–∏–Ω' },
            { problem: '3 —á 20 –º–∏–Ω 15 —Å = ? —Å', solution: '(3 √ó 60 + 20) √ó 60 + 15 = 12015 —Å' },
            { problem: '250 –º–∏–Ω = ? —á ? –º–∏–Ω', solution: '250 √∑ 60 = 4 —á 10 –º–∏–Ω' }
          ]
        },
        calendar: {
          title: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å',
          info: [
            '–í –≥–æ–¥—É 365 –¥–Ω–µ–π (–≤ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–º ‚Äî 366)',
            '–ú–µ—Å—è—Ü—ã –ø–æ 31 –¥–µ–Ω—å: —è–Ω–≤–∞—Ä—å, –º–∞—Ä—Ç, –º–∞–π, –∏—é–ª—å, –∞–≤–≥—É—Å—Ç, –æ–∫—Ç—è–±—Ä—å, –¥–µ–∫–∞–±—Ä—å',
            '–ú–µ—Å—è—Ü—ã –ø–æ 30 –¥–Ω–µ–π: –∞–ø—Ä–µ–ª—å, –∏—é–Ω—å, —Å–µ–Ω—Ç—è–±—Ä—å, –Ω–æ—è–±—Ä—å',
            '–§–µ–≤—Ä–∞–ª—å: 28 –¥–Ω–µ–π (–≤ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–º –≥–æ–¥—É ‚Äî 29)'
          ]
        },
        tips: [
          'üí° –í —Å—É—Ç–∫–∞—Ö 24 —á–∞—Å–∞, –≤ —á–∞—Å–µ 60 –º–∏–Ω—É—Ç, –≤ –º–∏–Ω—É—Ç–µ 60 —Å–µ–∫—É–Ω–¥',
          'üí° –ü–æ–º–Ω–∏ –ø—Ä–∞–≤–∏–ª–æ: "–í –≤–∏—Å–æ–∫–æ—Å–Ω–æ–º —Ñ–µ–≤—Ä–∞–ª–µ 29 –¥–Ω–µ–π"',
          'üí° –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏: 1 —á–∞—Å = 60 –º–∏–Ω—É—Ç, –∑–∞–Ω–∏–º–∞–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏'
        ]
      }
    },
    volume: {
      title: '–û–±—ä—ë–º',
      icon: 'Container',
      color: 'from-purple-500 to-pink-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –æ–±—ä—ë–º–∞',
          items: [
            { unit: '1 –∫—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä (–º¬≥)', equals: '1000 –ª', example: '–ù–µ–±–æ–ª—å—à–∞—è –∫–æ–º–Ω–∞—Ç–∞' },
            { unit: '1 –ª–∏—Ç—Ä (–ª)', equals: '1000 –º–ª = 1 –¥–º¬≥', example: '–ü–∞–∫–µ—Ç –º–æ–ª–æ–∫–∞' },
            { unit: '1 –º–∏–ª–ª–∏–ª–∏—Ç—Ä (–º–ª)', equals: '1 —Å–º¬≥', example: '–ö–∞–ø–ª—è –≤–æ–¥—ã' }
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª–∏—Ç—Ä—ã –≤ –º–ª ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º¬≥ –≤ –ª–∏—Ç—Ä—ã ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–ª –≤ –ª–∏—Ç—Ä—ã ‚Üí —Ä–∞–∑–¥–µ–ª–∏ –Ω–∞ 1000'
          ],
          examples: [
            { problem: '5 –ª 250 –º–ª = ? –º–ª', solution: '5 √ó 1000 + 250 = 5250 –º–ª' },
            { problem: '3500 –º–ª = ? –ª ? –º–ª', solution: '3500 √∑ 1000 = 3 –ª 500 –º–ª' },
            { problem: '2 –º¬≥ = ? –ª', solution: '2 √ó 1000 = 2000 –ª' }
          ]
        },
        formulas: {
          title: '–û–±—ä—ë–º —Ñ–∏–≥—É—Ä',
          items: [
            '–û–±—ä—ë–º –∫—É–±–∞: V = a¬≥, –≥–¥–µ a ‚Äî —Å—Ç–æ—Ä–æ–Ω–∞ –∫—É–±–∞',
            '–û–±—ä—ë–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥–∞: V = a √ó b √ó c',
            '–û–±—ä—ë–º —Ü–∏–ª–∏–Ω–¥—Ä–∞: V = œÄr¬≤h (–¥–ª—è –æ–ª–∏–º–ø–∏–∞–¥ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è)'
          ],
          examples: [
            { problem: '–ù–∞–π–¥–∏ –æ–±—ä—ë–º –∫—É–±–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π 5 —Å–º', solution: 'V = 5¬≥ = 125 —Å–º¬≥' }
          ]
        },
        tips: [
          'üí° 1 –ª–∏—Ç—Ä = 1 –¥–º¬≥ = 1000 —Å–º¬≥',
          'üí° –û–±—ä—ë–º –∂–∏–¥–∫–æ—Å—Ç–∏ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –ª–∏—Ç—Ä–∞—Ö –∏ –º–∏–ª–ª–∏–ª–∏—Ç—Ä–∞—Ö',
          'üí° –ü—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á –Ω–∞ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–º–Ω–∏: –æ–±—ä—ë–º = —Ä–∞—Å—Ö–æ–¥ √ó –≤—Ä–µ–º—è'
        ]
      }
    },
    area: {
      title: '–ü–ª–æ—â–∞–¥—å',
      icon: 'Square',
      color: 'from-yellow-500 to-orange-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –ø–ª–æ—â–∞–¥–∏',
          items: [
            { unit: '1 –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–∏–ª–æ–º–µ—Ç—Ä (–∫–º¬≤)', equals: '1 000 000 –º¬≤', example: '–ü–ª–æ—â–∞–¥—å —Ä–∞–π–æ–Ω–∞ –≥–æ—Ä–æ–¥–∞' },
            { unit: '1 –≥–µ–∫—Ç–∞—Ä (–≥–∞)', equals: '10 000 –º¬≤', example: '–§—É—Ç–±–æ–ª—å–Ω–æ–µ –ø–æ–ª–µ' },
            { unit: '1 –∞—Ä (a) –∏–ª–∏ —Å–æ—Ç–∫–∞', equals: '100 –º¬≤', example: '–î–∞—á–Ω—ã–π —É—á–∞—Å—Ç–æ–∫' },
            { unit: '1 –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä (–º¬≤)', equals: '100 –¥–º¬≤', example: '–ù–µ–±–æ–ª—å—à–æ–π –∫–æ–≤—ë—Ä' },
            { unit: '1 –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä (—Å–º¬≤)', equals: '100 –º–º¬≤', example: '–ü–æ—á—Ç–æ–≤–∞—è –º–∞—Ä–∫–∞' }
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–º¬≤ –≤ –º¬≤ ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1 000 000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≥–∞ –≤ –º¬≤ ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 10 000',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º¬≤ –≤ —Å–º¬≤ ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 10 000',
            '–í–Ω–∏–º–∞–Ω–∏–µ: –ø—Ä–∏ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–∏ –≤ –∫–≤–∞–¥—Ä–∞—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–æ–∂–µ –≤–æ–∑–≤–æ–¥–∏—Ç—Å—è –≤ –∫–≤–∞–¥—Ä–∞—Ç!'
          ],
          examples: [
            { problem: '3 –∫–º¬≤ = ? –º¬≤', solution: '3 √ó 1 000 000 = 3 000 000 –º¬≤' },
            { problem: '5 –≥–∞ = ? –º¬≤', solution: '5 √ó 10 000 = 50 000 –º¬≤' },
            { problem: '2 –º¬≤ 50 —Å–º¬≤ = ? —Å–º¬≤', solution: '2 √ó 10 000 + 50 = 20 050 —Å–º¬≤' }
          ]
        },
        formulas: {
          title: '–§–æ—Ä–º—É–ª—ã –ø–ª–æ—â–∞–¥–∏',
          items: [
            '–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞: S = a √ó b, –≥–¥–µ a –∏ b ‚Äî —Å—Ç–æ—Ä–æ–Ω—ã',
            '–ü–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞: S = a¬≤, –≥–¥–µ a ‚Äî —Å—Ç–æ—Ä–æ–Ω–∞',
            '–ü–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞: S = (a √ó h) √∑ 2, –≥–¥–µ a ‚Äî –æ—Å–Ω–æ–≤–∞–Ω–∏–µ, h ‚Äî –≤—ã—Å–æ—Ç–∞',
            '–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞: S = œÄr¬≤ (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è)'
          ],
          examples: [
            { problem: '–ù–∞–π–¥–∏ –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ 12 –º √ó 8 –º', solution: 'S = 12 √ó 8 = 96 –º¬≤' },
            { problem: '–ù–∞–π–¥–∏ –ø–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π 9 —Å–º', solution: 'S = 9¬≤ = 81 —Å–º¬≤' }
          ]
        },
        tips: [
          'üí° –ü–ª–æ—â–∞–¥—å ‚Äî —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü –≤–Ω—É—Ç—Ä–∏ —Ñ–∏–≥—É—Ä—ã',
          'üí° –ü—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ –¥–ª–∏–Ω –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–ª–æ—â–∞–¥—å: –º √ó –º = –º¬≤',
          'üí° 1 –≥–∞ = 100 –º √ó 100 –º = 10 000 –º¬≤'
        ]
      }
    },
    speed: {
      title: '–°–∫–æ—Ä–æ—Å—Ç—å',
      icon: 'Zap',
      color: 'from-indigo-500 to-purple-500',
      content: {
        basics: {
          title: '–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è',
          items: [
            { unit: '–°–∫–æ—Ä–æ—Å—Ç—å (v)', equals: '—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏', example: '–∫–º/—á, –º/—Å, –º/–º–∏–Ω' },
            { unit: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ (s)', equals: '–ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å', example: '–∫–º, –º, —Å–º' },
            { unit: '–í—Ä–µ–º—è (t)', equals: '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è', example: '—á, –º–∏–Ω, —Å' }
          ]
        },
        formulas: {
          title: '–§–æ—Ä–º—É–ª—ã',
          items: [
            '–°–∫–æ—Ä–æ—Å—Ç—å: v = s √∑ t',
            '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: s = v √ó t',
            '–í—Ä–µ–º—è: t = s √∑ v',
            '–°–∫–æ—Ä–æ—Å—Ç—å —Å–±–ª–∏–∂–µ–Ω–∏—è: v‚ÇÅ + v‚ÇÇ (–ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏)',
            '–°–∫–æ—Ä–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è: v‚ÇÅ + v‚ÇÇ (–ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –≤ —Ä–∞–∑–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã)',
            '–°–∫–æ—Ä–æ—Å—Ç—å –¥–æ–≥–æ–Ω–∞: v‚ÇÅ - v‚ÇÇ (–ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É)'
          ]
        },
        conversions: {
          title: '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü —Å–∫–æ—Ä–æ—Å—Ç–∏',
          rules: [
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–º/—á –≤ –º/—Å ‚Üí —Ä–∞–∑–¥–µ–ª–∏ –Ω–∞ 3,6',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º/—Å –≤ –∫–º/—á ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 3,6',
            '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–º/—á –≤ –º/–º–∏–Ω ‚Üí —É–º–Ω–æ–∂—å –Ω–∞ 1000 –∏ —Ä–∞–∑–¥–µ–ª–∏ –Ω–∞ 60'
          ],
          examples: [
            { problem: '72 –∫–º/—á = ? –º/—Å', solution: '72 √∑ 3,6 = 20 –º/—Å' },
            { problem: '–ü–æ–µ–∑–¥ –µ–¥–µ—Ç 80 –∫–º/—á. –ó–∞ 3 —á–∞—Å–∞ –∫–∞–∫–æ–π –ø—É—Ç—å?', solution: 's = 80 √ó 3 = 240 –∫–º' },
            { problem: '–ú–∞—à–∏–Ω–∞ –ø—Ä–æ–µ—Ö–∞–ª–∞ 150 –∫–º –∑–∞ 2 —á–∞—Å–∞. –ù–∞–π–¥–∏ —Å–∫–æ—Ä–æ—Å—Ç—å', solution: 'v = 150 √∑ 2 = 75 –∫–º/—á' }
          ]
        },
        tips: [
          'üí° –ó–∞–ø–æ–º–Ω–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫: S –≤–≤–µ—Ä—Ö—É, V –∏ T –≤–Ω–∏–∑—É',
          'üí° –ü—Ä–∏ –≤—Å—Ç—Ä–µ—á–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç—ã —Å–±–ª–∏–∂–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ',
          'üí° –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è ‚Äî –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!'
        ]
      }
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      <header className="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-6 px-4 shadow-lg">
        <div className="container mx-auto max-w-6xl">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <Button 
                variant="ghost" 
                className="text-white hover:bg-white/20"
                onClick={() => window.location.href = '/'}
              >
                <Icon name="Home" size={20} className="mr-2" />
                –ì–ª–∞–≤–Ω–∞—è
              </Button>
              <h1 className="text-3xl font-bold">–¢–µ–æ—Ä–∏—è: –í–µ–ª–∏—á–∏–Ω—ã</h1>
            </div>
            <Button 
              className="bg-white text-blue-600 hover:bg-white/90"
              onClick={() => window.location.href = '/tasks'}
            >
              –ö –∑–∞–¥–∞–Ω–∏—è–º
              <Icon name="ArrowRight" size={18} className="ml-2" />
            </Button>
          </div>
        </div>
      </header>

      <div className="container mx-auto max-w-6xl py-12 px-4">
        <div className="mb-8 text-center">
          <h2 className="text-4xl font-bold mb-4 text-gray-900">–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</h2>
          <p className="text-xl text-gray-600">–ü–æ–¥—Ä–æ–±–Ω–∞—è —Ç–µ–æ—Ä–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏</p>
        </div>

        <Tabs value={activeSection} onValueChange={setActiveSection} className="w-full">
          <TabsList className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-2 h-auto bg-transparent mb-8">
            {Object.entries(theoryData).map(([key, data]) => (
              <TabsTrigger
                key={key}
                value={key}
                className={`h-auto py-4 px-3 flex flex-col items-center gap-2 data-[state=active]:bg-gradient-to-br data-[state=active]:${data.color} data-[state=active]:text-white rounded-xl border-2 transition-all hover:scale-105`}
              >
                <Icon name={data.icon as any} size={28} />
                <span className="font-semibold text-sm">{data.title}</span>
              </TabsTrigger>
            ))}
          </TabsList>

          {Object.entries(theoryData).map(([key, data]) => (
            <TabsContent key={key} value={key} className="animate-fade-in">
              <Card className="border-2 shadow-xl">
                <CardHeader className={`bg-gradient-to-r ${data.color} text-white rounded-t-lg`}>
                  <div className="flex items-center gap-4">
                    <div className="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-xl flex items-center justify-center">
                      <Icon name={data.icon as any} size={36} />
                    </div>
                    <div>
                      <CardTitle className="text-3xl mb-2">{data.title}</CardTitle>
                      <CardDescription className="text-white/90 text-lg">
                        –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è, —Ñ–æ—Ä–º—É–ª—ã –∏ –ø—Ä–∏–º–µ—Ä—ã
                      </CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="p-8 space-y-8">
                  {data.content.basics && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="Info" size={24} className="text-blue-600" />
                        {data.content.basics.title}
                      </h3>
                      <div className="grid gap-3">
                        {data.content.basics.items.map((item: any, idx: number) => (
                          <Card key={idx} className="border-l-4 border-blue-500 bg-blue-50/50">
                            <CardContent className="p-4">
                              <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-2">
                                <div className="flex-1">
                                  <span className="font-bold text-lg">{item.unit}</span>
                                  <span className="text-gray-600 mx-3">=</span>
                                  <span className="text-blue-600 font-semibold">{item.equals}</span>
                                </div>
                                <div className="text-sm text-gray-600 italic">
                                  –ü—Ä–∏–º–µ—Ä: {item.example}
                                </div>
                              </div>
                            </CardContent>
                          </Card>
                        ))}
                      </div>
                    </div>
                  )}

                  {data.content.conversions && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="ArrowLeftRight" size={24} className="text-purple-600" />
                        {data.content.conversions.title}
                      </h3>
                      <Card className="bg-purple-50/50 border-purple-200 mb-4">
                        <CardContent className="p-6">
                          <h4 className="font-bold mb-3 text-lg">–ü—Ä–∞–≤–∏–ª–∞:</h4>
                          <ul className="space-y-2">
                            {data.content.conversions.rules.map((rule: string, idx: number) => (
                              <li key={idx} className="flex items-start gap-2">
                                <Icon name="CheckCircle" size={20} className="text-purple-600 flex-shrink-0 mt-0.5" />
                                <span>{rule}</span>
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                      <h4 className="font-bold mb-3 text-lg">–ü—Ä–∏–º–µ—Ä—ã:</h4>
                      <div className="space-y-3">
                        {data.content.conversions.examples.map((ex: any, idx: number) => (
                          <Card key={idx} className="bg-green-50/50 border-green-200">
                            <CardContent className="p-4">
                              <div className="flex flex-col gap-2">
                                <div className="flex items-center gap-2">
                                  <Icon name="Calculator" size={18} className="text-green-600" />
                                  <span className="font-semibold">{ex.problem}</span>
                                </div>
                                <div className="pl-7 text-green-700 font-medium">
                                  –†–µ—à–µ–Ω–∏–µ: {ex.solution}
                                </div>
                              </div>
                            </CardContent>
                          </Card>
                        ))}
                      </div>
                    </div>
                  )}

                  {data.content.perimeter && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="Hexagon" size={24} className="text-orange-600" />
                        {data.content.perimeter.title}
                      </h3>
                      <Card className="bg-orange-50/50 border-orange-200 mb-4">
                        <CardContent className="p-6">
                          <h4 className="font-bold mb-3 text-lg">–§–æ—Ä–º—É–ª—ã:</h4>
                          <ul className="space-y-2">
                            {data.content.perimeter.formulas.map((formula: string, idx: number) => (
                              <li key={idx} className="flex items-start gap-2">
                                <Icon name="Circle" size={20} className="text-orange-600 flex-shrink-0 mt-0.5" />
                                <span className="font-mono bg-white px-3 py-1 rounded">{formula}</span>
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                      {data.content.perimeter.examples.map((ex: any, idx: number) => (
                        <Card key={idx} className="bg-green-50/50 border-green-200">
                          <CardContent className="p-4">
                            <div className="flex flex-col gap-2">
                              <div className="font-semibold">{ex.problem}</div>
                              <div className="text-green-700 font-medium">–†–µ—à–µ–Ω–∏–µ: {ex.solution}</div>
                            </div>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  )}

                  {data.content.formulas && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="BookOpen" size={24} className="text-indigo-600" />
                        {data.content.formulas.title}
                      </h3>
                      <Card className="bg-indigo-50/50 border-indigo-200 mb-4">
                        <CardContent className="p-6">
                          <ul className="space-y-2">
                            {data.content.formulas.items.map((formula: string, idx: number) => (
                              <li key={idx} className="flex items-start gap-2">
                                <Icon name="Sparkles" size={20} className="text-indigo-600 flex-shrink-0 mt-0.5" />
                                <span className="font-mono bg-white px-3 py-1 rounded">{formula}</span>
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                      {data.content.formulas.examples && data.content.formulas.examples.map((ex: any, idx: number) => (
                        <Card key={idx} className="bg-green-50/50 border-green-200">
                          <CardContent className="p-4">
                            <div className="flex flex-col gap-2">
                              <div className="font-semibold">{ex.problem}</div>
                              <div className="text-green-700 font-medium">–†–µ—à–µ–Ω–∏–µ: {ex.solution}</div>
                            </div>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  )}

                  {data.content.calendar && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="Calendar" size={24} className="text-pink-600" />
                        {data.content.calendar.title}
                      </h3>
                      <Card className="bg-pink-50/50 border-pink-200">
                        <CardContent className="p-6">
                          <ul className="space-y-2">
                            {data.content.calendar.info.map((info: string, idx: number) => (
                              <li key={idx} className="flex items-start gap-2">
                                <Icon name="CheckCircle" size={20} className="text-pink-600 flex-shrink-0 mt-0.5" />
                                <span>{info}</span>
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                    </div>
                  )}

                  {data.content.tips && (
                    <div>
                      <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                        <Icon name="Lightbulb" size={24} className="text-yellow-600" />
                        –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
                      </h3>
                      <Card className="bg-yellow-50/50 border-yellow-300">
                        <CardContent className="p-6">
                          <ul className="space-y-3">
                            {data.content.tips.map((tip: string, idx: number) => (
                              <li key={idx} className="text-lg">
                                {tip}
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                    </div>
                  )}

                  <div className="flex justify-center pt-6">
                    <Button 
                      size="lg" 
                      className={`bg-gradient-to-r ${data.color} text-white hover:scale-105 transition-transform px-10 py-6 text-lg`}
                      onClick={() => window.location.href = '/tasks'}
                    >
                      –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º –ø–æ —Ç–µ–º–µ
                      <Icon name="ArrowRight" size={20} className="ml-2" />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          ))}
        </Tabs>
      </div>
    </div>
  );
};

export default Theory;
